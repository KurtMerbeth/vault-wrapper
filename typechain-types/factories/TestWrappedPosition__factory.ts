/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TestWrappedPosition,
  TestWrappedPositionInterface,
} from "../TestWrappedPosition";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PERMIT_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_who",
        type: "address",
      },
    ],
    name: "balanceOfUnderlying",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_destination",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_shares",
        type: "uint256",
      },
    ],
    name: "getSharesToUnderlying",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_destination",
        type: "address",
      },
    ],
    name: "prefundedDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "setSharesToUnderlying",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "underlyingUnitValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_destination",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_shares",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_minUnderlying",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_destination",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_minUnderlying",
        type: "uint256",
      },
    ],
    name: "withdrawUnderlying",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405260646007553480156200001657600080fd5b50604051620017233803806200172383398101604081905262000039916200023f565b806040518060400160405280600f81526020016e454c656d656e742046696e616e636560881b8152506040518060400160405280601381526020017f5465737457726170706564506f736974696f6e0000000000000000000000000081525081818160009081620000ab919062000316565b506001620000ba828262000316565b506002805460ff1916601217905560036020526000197f3617319a054d772f909f7c479a2cebe5066e836a939412e32403c99029b92eff81905530600090815260409020557f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051620001319190620003e2565b60408051918290038220828201825260018352603160f81b6020938401528151928301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160408051601f1981840301815282825280516020918201206006556001600160a01b038816608081905263313ce56760e01b8452915162000235955091935063313ce56792600480820193918290030181865afa158015620001f9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200021f919062000460565b6002805460ff191660ff92909216919091179055565b5050505062000485565b6000602082840312156200025257600080fd5b81516001600160a01b03811681146200026a57600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200029c57607f821691505b602082108103620002bd57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200031157600081815260208120601f850160051c81016020861015620002ec5750805b601f850160051c820191505b818110156200030d57828155600101620002f8565b5050505b505050565b81516001600160401b0381111562000332576200033262000271565b6200034a8162000343845462000287565b84620002c3565b602080601f831160018114620003825760008415620003695750858301515b600019600386901b1c1916600185901b1785556200030d565b600085815260208120601f198616915b82811015620003b35788860151825594840194600190910190840162000392565b5085821015620003d25787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000808354620003f28162000287565b600182811680156200040d5760018114620004235762000454565b60ff198416875282151583028701945062000454565b8760005260208060002060005b858110156200044b5781548a82015290840190820162000430565b50505082870194505b50929695505050505050565b6000602082840312156200047357600080fd5b815160ff811681146200026a57600080fd5b608051611266620004bd6000396000818161034b0152818161069401528181610b4e01528181610bd80152610db501526112666000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c80637ecebe00116100b8578063a9059cbb1161007c578063a9059cbb146102cf578063b5c5f672146102e2578063d505accf146102f5578063dd62ed3e14610308578063e613deb214610333578063fc0c546a1461034657600080fd5b80637ecebe001461025b57806385f45c881461027b578063886263d0146102a957806395d89b41146102b25780639c08be58146102ba57600080fd5b80633644e515116100ff5780633644e515146101e45780633af9e669146101ed57806347e7ef241461020057806367caf8711461021357806370a082311461023b57600080fd5b806306fdde031461013c578063095ea7b31461015a57806323b872dd1461017d57806330adf81f14610190578063313ce567146101c5575b600080fd5b610144610385565b6040516101519190610e5d565b60405180910390f35b61016d610168366004610ec7565b610413565b6040519015158152602001610151565b61016d61018b366004610ef1565b610480565b6101b77f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b604051908152602001610151565b6002546101d29060ff1681565b60405160ff9091168152602001610151565b6101b760065481565b6101b76101fb366004610f2d565b61064d565b6101b761020e366004610ec7565b61066f565b610226610221366004610f48565b610728565b60408051928352602083019190915201610151565b6101b7610249366004610f2d565b60036020526000908152604090205481565b6101b7610269366004610f2d565b60056020526000908152604090205481565b61028e610289366004610f2d565b610785565b60408051938452602084019290925290820152606001610151565b6101b760075481565b6101446107ca565b6102cd6102c8366004610f7b565b600755565b005b61016d6102dd366004610ec7565b6107d7565b6101b76102f0366004610f48565b6107e4565b6102cd610303366004610f94565b6107fb565b6101b7610316366004611007565b600460209081526000928352604080842090915290825290205481565b6101b7610341366004610f7b565b610b13565b61036d7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610151565b600080546103929061103a565b80601f01602080910402602001604051908101604052809291908181526020018280546103be9061103a565b801561040b5780601f106103e05761010080835404028352916020019161040b565b820191906000526020600020905b8154815290600101906020018083116103ee57829003601f168201915b505050505081565b3360008181526004602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259061046e9086815260200190565b60405180910390a35060015b92915050565b6001600160a01b038316600090815260036020526040812054828110156104ee5760405162461bcd60e51b815260206004820152601b60248201527f45524332303a20696e73756666696369656e742d62616c616e6365000000000060448201526064015b60405180910390fd5b6001600160a01b03851633146105ac576001600160a01b038516600090815260046020908152604080832033845290915290205460001981146105aa578381101561057b5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e742d616c6c6f77616e636500000060448201526064016104e5565b610585848261108a565b6001600160a01b03871660009081526004602090815260408083203384529091529020555b505b6105b6838261108a565b6001600160a01b0380871660009081526003602052604080822093909355908616815220546105e690849061109d565b6001600160a01b0380861660008181526003602052604090819020939093559151908716907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061063a9087815260200190565b60405180910390a3506001949350505050565b6001600160a01b03811660009081526003602052604081205461047a90610b1a565b6040516323b872dd60e01b8152336004820152306024820152604481018290526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd906064016020604051808303816000875af11580156106e5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061070991906110b0565b506000610714610b2a565b5090506107218482610c52565b9392505050565b600254600090819081906107409060ff16600a6111b6565b9050600061074d82610b1a565b905060008161075c84896111c5565b61076691906111dc565b9050600061077689838986610cd3565b99919850909650505050505050565b6000806000806000610795610b2a565b6001600160a01b03881660009081526003602052604090205491935091506107bd8784610c52565b9196909550909350915050565b600180546103929061103a565b6000610721338484610480565b60006107f38484846000610cd3565b949350505050565b6006546001600160a01b038881166000818152600560209081526040918290205482517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981840152808401859052948c166060860152608085018b905260a085015260c08085018a90528251808603909101815260e08501835280519082012061190160f01b6101008601526101028501959095526101228085019590955281518085039095018552610142909301905282519290910191909120906109035760405162461bcd60e51b815260206004820152601860248201527f45524332303a20696e76616c69642d616464726573732d30000000000000000060448201526064016104e5565b60408051600081526020810180835283905260ff861691810191909152606081018490526080810183905260019060a0016020604051602081039080840390855afa158015610956573d6000803e3d6000fd5b505050602060405103516001600160a01b0316886001600160a01b0316146109b85760405162461bcd60e51b8152602060048201526015602482015274115490cc8c0e881a5b9d985b1a590b5c195c9b5a5d605a1b60448201526064016104e5565b8415806109c55750844211155b610a095760405162461bcd60e51b8152602060048201526015602482015274115490cc8c0e881c195c9b5a5d0b595e1c1a5c9959605a1b60448201526064016104e5565b7f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0821115610a845760405162461bcd60e51b815260206004820152602260248201527f45524332303a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016104e5565b6001600160a01b0388166000908152600560205260408120805491610aa8836111fe565b90915550506001600160a01b038881166000818152600460209081526040808320948c16808452948252918290208a905590518981527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a35050505050505050565b600061047a825b60006007548261047a91906111c5565b6040516370a0823160e01b8152306004820152600090819081906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa158015610b95573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bb99190611217565b6040516338c110ef60e21b8152306004820152600060248201529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063e30443bc90604401600060405180830381600087803b158015610c2457600080fd5b505af1158015610c38573d6000803e3d6000fd5b5050505060075481610c4a91906111dc565b939092509050565b6001600160a01b038216600090815260036020526040902054610c7690829061109d565b6001600160a01b0383166000818152600360205260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610cc79085815260200190565b60405180910390a35050565b6000610cdf3385610d3f565b6000610cec858785610db1565b905083811015610d365760405162461bcd60e51b81526020600482015260156024820152744e6f7420656e6f75676820756e6465726c79696e6760581b60448201526064016104e5565b95945050505050565b6001600160a01b038216600090815260036020526040902054610d6390829061108a565b6001600160a01b0383166000818152600360205260408082209390935591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610cc79085815260200190565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663e22f03c18460075487610df191906111c5565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b158015610e3757600080fd5b505af1158015610e4b573d6000803e3d6000fd5b50505050600754846107f391906111c5565b600060208083528351808285015260005b81811015610e8a57858101830151858201604001528201610e6e565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610ec257600080fd5b919050565b60008060408385031215610eda57600080fd5b610ee383610eab565b946020939093013593505050565b600080600060608486031215610f0657600080fd5b610f0f84610eab565b9250610f1d60208501610eab565b9150604084013590509250925092565b600060208284031215610f3f57600080fd5b61072182610eab565b600080600060608486031215610f5d57600080fd5b610f6684610eab565b95602085013595506040909401359392505050565b600060208284031215610f8d57600080fd5b5035919050565b600080600080600080600060e0888a031215610faf57600080fd5b610fb888610eab565b9650610fc660208901610eab565b95506040880135945060608801359350608088013560ff81168114610fea57600080fd5b9699959850939692959460a0840135945060c09093013592915050565b6000806040838503121561101a57600080fd5b61102383610eab565b915061103160208401610eab565b90509250929050565b600181811c9082168061104e57607f821691505b60208210810361106e57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561047a5761047a611074565b8082018082111561047a5761047a611074565b6000602082840312156110c257600080fd5b8151801515811461072157600080fd5b600181815b8085111561110d5781600019048211156110f3576110f3611074565b8085161561110057918102915b93841c93908002906110d7565b509250929050565b6000826111245750600161047a565b816111315750600061047a565b816001811461114757600281146111515761116d565b600191505061047a565b60ff84111561116257611162611074565b50506001821b61047a565b5060208310610133831016604e8410600b8410161715611190575081810a61047a565b61119a83836110d2565b80600019048211156111ae576111ae611074565b029392505050565b600061072160ff841683611115565b808202811582820484141761047a5761047a611074565b6000826111f957634e487b7160e01b600052601260045260246000fd5b500490565b60006001820161121057611210611074565b5060010190565b60006020828403121561122957600080fd5b505191905056fea2646970667358221220070b76be036694c51e22be9a143cd90d5633c7774b131600e82d9c8da6671bbe64736f6c63430008110033";

type TestWrappedPositionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestWrappedPositionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestWrappedPosition__factory extends ContractFactory {
  constructor(...args: TestWrappedPositionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _token: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestWrappedPosition> {
    return super.deploy(
      _token,
      overrides || {}
    ) as Promise<TestWrappedPosition>;
  }
  getDeployTransaction(
    _token: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_token, overrides || {});
  }
  attach(address: string): TestWrappedPosition {
    return super.attach(address) as TestWrappedPosition;
  }
  connect(signer: Signer): TestWrappedPosition__factory {
    return super.connect(signer) as TestWrappedPosition__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestWrappedPositionInterface {
    return new utils.Interface(_abi) as TestWrappedPositionInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestWrappedPosition {
    return new Contract(address, _abi, signerOrProvider) as TestWrappedPosition;
  }
}
