/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BytesLike,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ZapYearnShares,
  ZapYearnSharesInterface,
} from "../ZapYearnShares";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "__trancheFactory",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "__trancheBytecodeHash",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "authorize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "authorized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "deauthorize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "deprecate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "isAuthorized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isFrozen",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_newState",
        type: "bool",
      },
    ],
    name: "setIsFrozen",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_underlying",
        type: "address",
      },
      {
        internalType: "contract IYearnVault",
        name: "_vault",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_expiration",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_position",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_ptExpected",
        type: "uint256",
      },
    ],
    name: "zapSharesIn",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c06040526002805460ff1916905534801561001a57600080fd5b506040516109303803806109308339810160408190526100399161007c565b600080546001600160a01b0319163390811782558152600160208190526040909120805460ff191690911790556001600160a01b0390911660805260a0526100b6565b6000806040838503121561008f57600080fd5b82516001600160a01b03811681146100a657600080fd5b6020939093015192949293505050565b60805160a0516108556100db60003960006104480152600061041701526108556000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c806364eda74b1161006657806364eda74b1461011d5780638da5cb5b14610130578063b6a5d7de1461015b578063b91816111461016e578063fe9fbb801461019157600080fd5b80630fcc0c28146100a357806313af4035146100ad57806327c97fa5146100c057806333eeb147146100d357806349392386146100f5575b600080fd5b6100ab6101bd565b005b6100ab6100bb3660046106e5565b6101f3565b6100ab6100ce3660046106e5565b61023f565b6002546100e09060ff1681565b60405190151581526020015b60405180910390f35b610108610103366004610709565b61028a565b604080519283526020830191909152016100ec565b6100ab61012b36600461077e565b61060e565b600054610143906001600160a01b031681565b6040516001600160a01b0390911681526020016100ec565b6100ab6101693660046106e5565b610678565b6100e061017c3660046106e5565b60016020526000908152604090205460ff1681565b6100e061019f3660046106e5565b6001600160a01b031660009081526001602052604090205460ff1690565b6000546001600160a01b031633146101f05760405162461bcd60e51b81526004016101e79061079b565b60405180910390fd5b33ff5b6000546001600160a01b0316331461021d5760405162461bcd60e51b81526004016101e79061079b565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146102695760405162461bcd60e51b81526004016101e79061079b565b6001600160a01b03166000908152600160205260409020805460ff19169055565b600254600090819060ff16156102d45760405162461bcd60e51b815260206004820152600f60248201526e21b7b73a3930b1ba10333937bd32b760891b60448201526064016101e7565b6040516323b872dd60e01b8152336004820152306024820152604481018790526001600160a01b038816906323b872dd906064016020604051808303816000875af1158015610327573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034b91906107c5565b50604051631cc6d2f960e31b8152600481018790526001600160a01b0385811660248301526000604483015288169063e63697c8906064016020604051808303816000875af11580156103a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c691906107e2565b50604080516bffffffffffffffffffffffff19606087811b821660208085019190915260348085018b9052855180860390910181526054850186528051908201206001600160f81b031960748601527f000000000000000000000000000000000000000000000000000000000000000090921b909216607584015260898301527f000000000000000000000000000000000000000000000000000000000000000060a9808401919091528351808403909101815260c990920190925280519101206000906040516370a0823160e01b81526001600160a01b0387811660048301529192506000918b16906370a0823190602401602060405180830381865afa1580156104d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104fa91906107e2565b6040516310be8b9160e31b815233600482015290915060009081906001600160a01b038516906385f45c889060240160408051808303816000875af1158015610547573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056b91906107fb565b91509150828110156105b65760405162461bcd60e51b8152602060048201526014602482015273139bdd08195b9bdd59da081655081b5a5b9d195960621b60448201526064016101e7565b868210156105fd5760405162461bcd60e51b8152602060048201526014602482015273139bdd08195b9bdd59da081415081b5a5b9d195960621b60448201526064016101e7565b909b909a5098505050505050505050565b3360009081526001602052604090205460ff166106655760405162461bcd60e51b815260206004820152601560248201527414d95b99195c881b9bdd08105d5d1a1bdc9a5e9959605a1b60448201526064016101e7565b6002805460ff1916911515919091179055565b6000546001600160a01b031633146106a25760405162461bcd60e51b81526004016101e79061079b565b6106cd816001600160a01b03166000908152600160208190526040909120805460ff19169091179055565b50565b6001600160a01b03811681146106cd57600080fd5b6000602082840312156106f757600080fd5b8135610702816106d0565b9392505050565b60008060008060008060c0878903121561072257600080fd5b863561072d816106d0565b9550602087013561073d816106d0565b94506040870135935060608701359250608087013561075b816106d0565b8092505060a087013590509295509295509295565b80151581146106cd57600080fd5b60006020828403121561079057600080fd5b813561070281610770565b60208082526010908201526f29b2b73232b9103737ba1037bbb732b960811b604082015260600190565b6000602082840312156107d757600080fd5b815161070281610770565b6000602082840312156107f457600080fd5b5051919050565b6000806040838503121561080e57600080fd5b50508051602090910151909290915056fea2646970667358221220eb8541eaaa6ca4d5d507d1f043790c7604963f5bbe808e8f2cb005818b5eadc664736f6c63430008110033";

type ZapYearnSharesConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ZapYearnSharesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ZapYearnShares__factory extends ContractFactory {
  constructor(...args: ZapYearnSharesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    __trancheFactory: string,
    __trancheBytecodeHash: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ZapYearnShares> {
    return super.deploy(
      __trancheFactory,
      __trancheBytecodeHash,
      overrides || {}
    ) as Promise<ZapYearnShares>;
  }
  getDeployTransaction(
    __trancheFactory: string,
    __trancheBytecodeHash: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      __trancheFactory,
      __trancheBytecodeHash,
      overrides || {}
    );
  }
  attach(address: string): ZapYearnShares {
    return super.attach(address) as ZapYearnShares;
  }
  connect(signer: Signer): ZapYearnShares__factory {
    return super.connect(signer) as ZapYearnShares__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ZapYearnSharesInterface {
    return new utils.Interface(_abi) as ZapYearnSharesInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ZapYearnShares {
    return new Contract(address, _abi, signerOrProvider) as ZapYearnShares;
  }
}
