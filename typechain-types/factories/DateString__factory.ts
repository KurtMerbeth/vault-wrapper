/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { DateString, DateStringInterface } from "../DateString";

const _abi = [
  {
    inputs: [],
    name: "OFFSET19700101",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SECONDS_PER_DAY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SECONDS_PER_HOUR",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SECONDS_PER_MINUTE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x610c5261003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361061006c5760003560e01c80634df861261461007157806374f0314f1461008c578063a3f144ae14610096578063bcb4f29a146100a0578063e9556430146100c2578063f40ce946146100ca575b600080fd5b61007a610e1081565b60405190815260200160405180910390f35b61007a6201518081565b61007a62253d8c81565b8180156100ac57600080fd5b506100c06100bb366004610997565b6100ea565b005b61007a603c81565b8180156100d657600080fd5b506100c06100e53660046109cf565b6100f8565b6100f48282610108565b5050565b610103838383610568565b505050565b806000808061012261011d6201518088610abf565b6106af565b919450925090506000610136600a83610abf565b905084610144826030610ad3565b60f81b908080548061015590610af2565b80601f81036101745783600052602060002060ff1984168155603f9350505b5060029190910190915581546001161561019d5790600052602060002090602091828204019190065b909190919091601f036101000a81548160ff02191690600160f81b840402179055506000600a836101ce9190610b2c565b9050856101dc826030610ad3565b60f81b90808054806101ed90610af2565b80601f810361020c5783600052602060002060ff1984168155603f9350505b506002919091019091558154600116156102355790600052602060002090602091828204019190065b909190919091601f036101000a81548160ff02191690600160f81b8404021790555050508160010361027e5761027984602560f91b604160f81b602760f91b610823565b610420565b8160020361029e5761027984602360f91b604560f81b602160f91b610823565b816003036102be5761027984604d60f81b604160f81b602960f91b610823565b816004036102de5761027984604160f81b600560fc1b602960f91b610823565b816005036102fe5761027984604d60f81b604160f81b605960f81b610823565b8160060361031e5761027984602560f91b605560f81b602760f91b610823565b8160070361033e5761027984602560f91b605560f81b601360fa1b610823565b8160080361035e5761027984604160f81b605560f81b604760f81b610823565b8160090361037e5761027984605360f81b604560f81b600560fc1b610823565b81600a0361039e5761027984604f60f81b604360f81b601560fa1b610823565b81600b036103be5761027984602760f91b604f60f81b602b60f91b610823565b81600c036103de5761027984601160fa1b604560f81b604360f81b610823565b60405162461bcd60e51b81526020600482015260136024820152723230ba32903232b1b7b234b7339032b93937b960691b604482015260640160405180910390fd5b600061042d606485610b2c565b9050600061043c600a83610abf565b90508561044a826030610ad3565b60f81b908080548061045b90610af2565b80601f810361047a5783600052602060002060ff1984168155603f9350505b506002919091019091558154600116156104a35790600052602060002090602091828204019190065b909190919091601f036101000a81548160ff02191690600160f81b840402179055506000600a836104d49190610b2c565b9050866104e2826030610ad3565b60f81b90808054806104f390610af2565b80601f81036105125783600052602060002060ff1984168155603f9350505b5060029190910190915581546001161561053b5790600052602060002090602091828204019190065b909190919091601f036101000a81548160ff02191690600160f81b84040217905550505050505050505050565b828160005b825181101561061f578183828151811061058957610589610b40565b602001015160f81c60f81b90808054806105a290610af2565b80601f81036105c15783600052602060002060ff1984168155603f9350505b506002919091019091558154600116156105ea5790600052602060002090602091828204019190065b909190919091601f036101000a81548160ff02191690600160f81b84040217905550808061061790610b56565b91505061056d565b5080602d60f81b908080548061063490610af2565b80601f81036106535783600052602060002060ff1984168155603f9350505b5060029190910190915581546001161561067c5790600052602060002090602091828204019190065b909190919091601f036101000a81548160ff02191690600160f81b840402179055506106a884846100ea565b5050505050565b60008080838162253d8c6106c68362010bd9610b6f565b6106d09190610b6f565b9050600062023ab16106e3836004610b97565b6106ed9190610bc7565b905060046106fe8262023ab1610b97565b610709906003610b6f565b6107139190610bc7565b61071d9083610bf5565b9150600062164b09610730846001610b6f565b61073c90610fa0610b97565b6107469190610bc7565b90506004610756826105b5610b97565b6107609190610bc7565b61076a9084610bf5565b61077590601f610b6f565b9250600061098f610787856050610b97565b6107919190610bc7565b9050600060506107a38361098f610b97565b6107ad9190610bc7565b6107b79086610bf5565b90506107c4600b83610bc7565b94506107d185600c610b97565b6107dc836002610b6f565b6107e69190610bf5565b915084836107f5603187610bf5565b610800906064610b97565b61080a9190610b6f565b6108149190610b6f565b9a919950975095505050505050565b8383908080548061083390610af2565b80601f81036108525783600052602060002060ff1984168155603f9350505b5060029190910190915581546001161561087b5790600052602060002090602091828204019190065b909190919091601f036101000a81548160ff02191690600160f81b84040217905550838290808054806108ad90610af2565b80601f81036108cc5783600052602060002060ff1984168155603f9350505b506002919091019091558154600116156108f55790600052602060002090602091828204019190065b909190919091601f036101000a81548160ff02191690600160f81b840402179055508381908080548061092790610af2565b80601f81036109465783600052602060002060ff1984168155603f9350505b5060029190910190915581546001161561096f5790600052602060002090602091828204019190065b909190919091601f036101000a81548160ff02191690600160f81b8404021790555050505050565b600080604083850312156109aa57600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b6000806000606084860312156109e457600080fd5b833567ffffffffffffffff808211156109fc57600080fd5b818601915086601f830112610a1057600080fd5b813581811115610a2257610a226109b9565b604051601f8201601f19908116603f01168101908382118183101715610a4a57610a4a6109b9565b81604052828152896020848701011115610a6357600080fd5b82602086016020830137600060208483010152809750505050505060208401359150604084013590509250925092565b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600082610ace57610ace610a93565b500490565b60ff8181168382160190811115610aec57610aec610aa9565b92915050565b600181811c90821680610b0657607f821691505b602082108103610b2657634e487b7160e01b600052602260045260246000fd5b50919050565b600082610b3b57610b3b610a93565b500690565b634e487b7160e01b600052603260045260246000fd5b600060018201610b6857610b68610aa9565b5060010190565b8082018281126000831280158216821582161715610b8f57610b8f610aa9565b505092915050565b80820260008212600160ff1b84141615610bb357610bb3610aa9565b8181058314821517610aec57610aec610aa9565b600082610bd657610bd6610a93565b600160ff1b821460001984141615610bf057610bf0610aa9565b500590565b8181036000831280158383131683831282161715610c1557610c15610aa9565b509291505056fea26469706673582212209646c77fe03416035e4191f71ab23425b63b258ed2c6626beb1fdf1e1702ba5964736f6c63430008110033";

type DateStringConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DateStringConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DateString__factory extends ContractFactory {
  constructor(...args: DateStringConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DateString> {
    return super.deploy(overrides || {}) as Promise<DateString>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): DateString {
    return super.attach(address) as DateString;
  }
  connect(signer: Signer): DateString__factory {
    return super.connect(signer) as DateString__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DateStringInterface {
    return new utils.Interface(_abi) as DateStringInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DateString {
    return new Contract(address, _abi, signerOrProvider) as DateString;
  }
}
