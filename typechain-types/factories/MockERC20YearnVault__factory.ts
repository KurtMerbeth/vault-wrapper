/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MockERC20YearnVault,
  MockERC20YearnVaultInterface,
} from "../MockERC20YearnVault";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DEGRADATION_COEFFICIENT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PERMIT_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "apiVersion",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "authorize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "authorized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "deauthorize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
    ],
    name: "deposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "governance",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "isAuthorized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastReport",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lockedProfit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lockedProfitDegradation",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "precisionFactor",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pricePerShare",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_deposit",
        type: "uint256",
      },
    ],
    name: "report",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_limit",
        type: "uint256",
      },
    ],
    name: "setDepositLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract ERC20Permit",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalAssets",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalShares",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_maxShares",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_maxLoss",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001be338038062001be3833981016040819052620000349162000299565b604080518082018252601081526f135bd8dac81659585c9b8815985d5b1d60821b6020808301919091528251808401909352600383526226acab60e91b90830152600080546001600160a01b0319163317905590600262000096838262000370565b506003620000a5828262000370565b506004805460ff1916601217905560056020526000197f05b8ccbb9d4d8fb16ea74ce3c29a41f1b461fbdaff4714a0d9a8eb05499746bc81905530600090815260409020557f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60026040516200011c91906200043c565b60408051918290038220828201825260018352603160f81b6020938401528151928301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160408051808303601f19018152918152815160209283012060085533600090815260019283905220805460ff1916909117905550620001ba9050565b600b80546001600160a01b0319166001600160a01b0383169081179091556040805163313ce56760e01b8152905163313ce567916004808201926020929091908290030181865afa15801562000214573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200023a9190620004ba565b6004805460ff191660ff9290921691821790556200025a906012620004f5565b6200026790600a62000614565b600a55620f424062000283670de0b6b3a7640000602e62000625565b6200028f91906200063f565b600c555062000662565b600060208284031215620002ac57600080fd5b81516001600160a01b0381168114620002c457600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620002f657607f821691505b6020821081036200031757634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200036b57600081815260208120601f850160051c81016020861015620003465750805b601f850160051c820191505b81811015620003675782815560010162000352565b5050505b505050565b81516001600160401b038111156200038c576200038c620002cb565b620003a4816200039d8454620002e1565b846200031d565b602080601f831160018114620003dc5760008415620003c35750858301515b600019600386901b1c1916600185901b17855562000367565b600085815260208120601f198616915b828110156200040d57888601518255948401946001909101908401620003ec565b50858210156200042c5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60008083546200044c81620002e1565b600182811680156200046757600181146200047d57620004ae565b60ff1984168752821515830287019450620004ae565b8760005260208060002060005b85811015620004a55781548a8201529084019082016200048a565b50505082870194505b50929695505050505050565b600060208284031215620004cd57600080fd5b815160ff81168114620002c457600080fd5b634e487b7160e01b600052601160045260246000fd5b60ff8281168282160390811115620005115762000511620004df565b92915050565b600181815b80851115620005585781600019048211156200053c576200053c620004df565b808516156200054a57918102915b93841c93908002906200051c565b509250929050565b600082620005715750600162000511565b81620005805750600062000511565b8160018114620005995760028114620005a457620005c4565b600191505062000511565b60ff841115620005b857620005b8620004df565b50506001821b62000511565b5060208310610133831016604e8410600b8410161715620005e9575081810a62000511565b620005f5838362000517565b80600019048211156200060c576200060c620004df565b029392505050565b6000620002c460ff84168362000560565b8082028115828204841417620005115762000511620004df565b6000826200065d57634e487b7160e01b600052601260045260246000fd5b500490565b61157180620006726000396000f3fe608060405234801561001057600080fd5b50600436106102065760003560e01c80637ecebe001161011a578063b9181611116100ad578063d505accf1161007c578063d505accf1461044d578063dd62ed3e14610460578063e63697c81461048b578063fc0c546a1461049e578063fe9fbb80146104b157600080fd5b8063b9181611146103ff578063bdc8144b14610422578063c3535b5214610435578063d250f0881461043e57600080fd5b806399530b06116100e957806399530b06146103c85780639d902fc0146103d0578063a9059cbb146103d9578063b6a5d7de146103ec57600080fd5b80637ecebe001461037a5780638da5cb5b1461039a57806395d89b41146103ad578063969b1cdb146103b557600080fd5b806330adf81f1161019d578063422327161161016c578063422327161461031a57806344b81396146103235780635aa6e6751461032c5780636e553f651461034757806370a082311461035a57600080fd5b806330adf81f146102c2578063313ce567146102e95780633644e515146103085780633a98ef391461031157600080fd5b806318160ddd116101d957806318160ddd1461027357806323b872dd1461027b578063258294101461028e57806327c97fa5146102af57600080fd5b806301e1d1141461020b57806306fdde0314610226578063095ea7b31461023b57806313af40351461025e575b600080fd5b6102136104dd565b6040519081526020015b60405180910390f35b61022e61054f565b60405161021d9190611129565b61024e610249366004611193565b6105dd565b604051901515815260200161021d565b61027161026c3660046111bd565b61064a565b005b600954610213565b61024e6102893660046111d8565b61069f565b604080518082019091526005815264181719971960d91b602082015261022e565b6102716102bd3660046111bd565b610867565b6102137f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b6004546102f69060ff1681565b60405160ff909116815260200161021d565b61021360085481565b61021360095481565b610213600c5481565b610213600e5481565b60005b6040516001600160a01b03909116815260200161021d565b610213610355366004611214565b6108b2565b6102136103683660046111bd565b60056020526000908152604090205481565b6102136103883660046111bd565b60076020526000908152604090205481565b60005461032f906001600160a01b031681565b61022e610988565b6102716103c3366004611240565b610995565b610213610a74565b610213600a5481565b61024e6103e7366004611193565b610a91565b6102716103fa3660046111bd565b610aa5565b61024e61040d3660046111bd565b60016020526000908152604090205460ff1681565b610271610430366004611240565b610afd565b610213600d5481565b610213670de0b6b3a764000081565b61027161045b366004611259565b610b39565b61021361046e3660046112cc565b600660209081526000928352604080842090915290825290205481565b6102136104993660046112f6565b610e51565b600b5461032f906001600160a01b031681565b61024e6104bf3660046111bd565b6001600160a01b031660009081526001602052604090205460ff1690565b600b546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610526573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054a919061131b565b905090565b6002805461055c90611334565b80601f016020809104026020016040519081016040528092919081815260200182805461058890611334565b80156105d55780601f106105aa576101008083540402835291602001916105d5565b820191906000526020600020905b8154815290600101906020018083116105b857829003601f168201915b505050505081565b3360008181526006602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906106389086815260200190565b60405180910390a35060015b92915050565b6000546001600160a01b0316331461067d5760405162461bcd60e51b81526004016106749061136e565b60405180910390fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b038316600090815260056020526040812054828110156107085760405162461bcd60e51b815260206004820152601b60248201527f45524332303a20696e73756666696369656e742d62616c616e636500000000006044820152606401610674565b6001600160a01b03851633146107c6576001600160a01b038516600090815260066020908152604080832033845290915290205460001981146107c457838110156107955760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e742d616c6c6f77616e63650000006044820152606401610674565b61079f84826113ae565b6001600160a01b03871660009081526006602090815260408083203384529091529020555b505b6107d083826113ae565b6001600160a01b0380871660009081526005602052604080822093909355908616815220546108009084906113c1565b6001600160a01b0380861660008181526005602052604090819020939093559151908716907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906108549087815260200190565b60405180910390a3506001949350505050565b6000546001600160a01b031633146108915760405162461bcd60e51b81526004016106749061136e565b6001600160a01b03166000908152600160205260409020805460ff19169055565b60008083116108f85760405162461bcd60e51b81526020600482015260126024820152716465706f736974696e6720302076616c756560701b6044820152606401610674565b60006109048385610fb7565b600b546040516323b872dd60e01b8152336004820152306024820152604481018790529192506001600160a01b0316906323b872dd906064016020604051808303816000875af115801561095c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098091906113d4565b509392505050565b6003805461055c90611334565b3360009081526001602052604090205460ff166109ec5760405162461bcd60e51b815260206004820152601560248201527414d95b99195c881b9bdd08105d5d1a1bdc9a5e9959605a1b6044820152606401610674565b42600d55600e819055600b546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610a4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a7091906113d4565b5050565b60045460009061054a90610a8c9060ff16600a6114da565b611055565b6000610a9e33848461069f565b9392505050565b6000546001600160a01b03163314610acf5760405162461bcd60e51b81526004016106749061136e565b610afa816001600160a01b03166000908152600160208190526040909120805460ff19169091179055565b50565b3315610afa5760405162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b6044820152606401610674565b6008546001600160a01b038881166000818152600760209081526040918290205482517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981840152808401859052948c166060860152608085018b905260a085015260c08085018a90528251808603909101815260e08501835280519082012061190160f01b610100860152610102850195909552610122808501959095528151808503909501855261014290930190528251929091019190912090610c415760405162461bcd60e51b815260206004820152601860248201527f45524332303a20696e76616c69642d616464726573732d3000000000000000006044820152606401610674565b60408051600081526020810180835283905260ff861691810191909152606081018490526080810183905260019060a0016020604051602081039080840390855afa158015610c94573d6000803e3d6000fd5b505050602060405103516001600160a01b0316886001600160a01b031614610cf65760405162461bcd60e51b8152602060048201526015602482015274115490cc8c0e881a5b9d985b1a590b5c195c9b5a5d605a1b6044820152606401610674565b841580610d035750844211155b610d475760405162461bcd60e51b8152602060048201526015602482015274115490cc8c0e881c195c9b5a5d0b595e1c1a5c9959605a1b6044820152606401610674565b7f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0821115610dc25760405162461bcd60e51b815260206004820152602260248201527f45524332303a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610674565b6001600160a01b0388166000908152600760205260408120805491610de6836114e9565b90915550506001600160a01b038881166000818152600660209081526040808320948c16808452948252918290208a905590518981527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a35050505050505050565b6000808411610e985760405162461bcd60e51b815260206004820152601360248201527243616e2774207769746864726177207a65726f60681b6044820152606401610674565b33600090815260056020526040902054841115610eef5760405162461bcd60e51b8152602060048201526015602482015274536861726573206578636565642062616c616e636560581b6044820152606401610674565b6000610efa85611055565b90508460096000828254610f0e91906113ae565b90915550503360009081526005602052604081208054879290610f329084906113ae565b9091555050600b5460405163a9059cbb60e01b81526001600160a01b038681166004830152602482018490529091169063a9059cbb906044016020604051808303816000875af1158015610f8a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fae91906113d4565b50949350505050565b6000806000600954111561100657600a54610fd06104dd565b60095485600a54610fe19190611502565b610feb9190611502565b610ff59190611519565b610fff9190611519565b9050611009565b50815b806009600082825461101b91906113c1565b90915550506001600160a01b038416600090815260056020526040812080548392906110489084906113c1565b9091555090949350505050565b6000600954600003611065575090565b6000600c54600d544261107891906113ae565b6110829190611502565b9050600061108e6104dd565b9050670de0b6b3a76400008210156110f257600a54600e54670de0b6b3a7640000906110ba8584611502565b6110c49190611502565b6110ce9190611519565b6110d89190611519565b600e546110e591906113ae565b6110ef90826113ae565b90505b600a54600954826111038784611502565b61110d9190611502565b6111179190611519565b6111219190611519565b949350505050565b600060208083528351808285015260005b818110156111565785810183015185820160400152820161113a565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461118e57600080fd5b919050565b600080604083850312156111a657600080fd5b6111af83611177565b946020939093013593505050565b6000602082840312156111cf57600080fd5b610a9e82611177565b6000806000606084860312156111ed57600080fd5b6111f684611177565b925061120460208501611177565b9150604084013590509250925092565b6000806040838503121561122757600080fd5b8235915061123760208401611177565b90509250929050565b60006020828403121561125257600080fd5b5035919050565b600080600080600080600060e0888a03121561127457600080fd5b61127d88611177565b965061128b60208901611177565b95506040880135945060608801359350608088013560ff811681146112af57600080fd5b9699959850939692959460a0840135945060c09093013592915050565b600080604083850312156112df57600080fd5b6112e883611177565b915061123760208401611177565b60008060006060848603121561130b57600080fd5b8335925061120460208501611177565b60006020828403121561132d57600080fd5b5051919050565b600181811c9082168061134857607f821691505b60208210810361136857634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526010908201526f29b2b73232b9103737ba1037bbb732b960811b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b8181038181111561064457610644611398565b8082018082111561064457610644611398565b6000602082840312156113e657600080fd5b81518015158114610a9e57600080fd5b600181815b8085111561143157816000190482111561141757611417611398565b8085161561142457918102915b93841c93908002906113fb565b509250929050565b60008261144857506001610644565b8161145557506000610644565b816001811461146b576002811461147557611491565b6001915050610644565b60ff84111561148657611486611398565b50506001821b610644565b5060208310610133831016604e8410600b84101617156114b4575081810a610644565b6114be83836113f6565b80600019048211156114d2576114d2611398565b029392505050565b6000610a9e60ff841683611439565b6000600182016114fb576114fb611398565b5060010190565b808202811582820484141761064457610644611398565b60008261153657634e487b7160e01b600052601260045260246000fd5b50049056fea264697066735822122033cb72c18a1668531793cef7744620a924e0950d7e9c1cf194b8b0658e67094a64736f6c63430008110033";

type MockERC20YearnVaultConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockERC20YearnVaultConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockERC20YearnVault__factory extends ContractFactory {
  constructor(...args: MockERC20YearnVaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _token: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockERC20YearnVault> {
    return super.deploy(
      _token,
      overrides || {}
    ) as Promise<MockERC20YearnVault>;
  }
  getDeployTransaction(
    _token: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_token, overrides || {});
  }
  attach(address: string): MockERC20YearnVault {
    return super.attach(address) as MockERC20YearnVault;
  }
  connect(signer: Signer): MockERC20YearnVault__factory {
    return super.connect(signer) as MockERC20YearnVault__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockERC20YearnVaultInterface {
    return new utils.Interface(_abi) as MockERC20YearnVaultInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockERC20YearnVault {
    return new Contract(address, _abi, signerOrProvider) as MockERC20YearnVault;
  }
}
