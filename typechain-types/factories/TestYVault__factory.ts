/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TestYVault, TestYVaultInterface } from "../TestYVault";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "_decimals",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PERMIT_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "apiVersion",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "destination",
        type: "address",
      },
    ],
    name: "deposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "governance",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "pricePerShare",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "setDepositLimit",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalAssets",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "updateShares",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_shares",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "destination",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620016c9380380620016c98339810160408190526200003491620001bc565b6040518060400160405280600b81526020016a3a32b9ba103cba37b5b2b760a91b815250604051806040016040528060068152602001653caa37b5b2b760d11b8152508160009081620000889190620002b0565b506001620000978282620002b0565b506002805460ff1916601217905560036020526000197f3617319a054d772f909f7c479a2cebe5066e836a939412e32403c99029b92eff81905530600090815260409020557f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60006040516200010e91906200037c565b60408051918290038220828201825260018352603160f81b602093840152815180840194909452838201527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608401524660808401523060a0808501919091528151808503909101815260c0909301905281519101206006555050600880546001600160a01b0319166001600160a01b0384161790556002805460ff191660ff83161790555050620003fa565b60008060408385031215620001d057600080fd5b82516001600160a01b0381168114620001e857600080fd5b602084015190925060ff811681146200020057600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200023657607f821691505b6020821081036200025757634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002ab57600081815260208120601f850160051c81016020861015620002865750805b601f850160051c820191505b81811015620002a75782815560010162000292565b5050505b505050565b81516001600160401b03811115620002cc57620002cc6200020b565b620002e481620002dd845462000221565b846200025d565b602080601f8311600181146200031c5760008415620003035750858301515b600019600386901b1c1916600185901b178555620002a7565b600085815260208120601f198616915b828110156200034d578886015182559484019460019091019084016200032c565b50858210156200036c5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60008083546200038c8162000221565b60018281168015620003a75760018114620003bd57620003ee565b60ff1984168752821515830287019450620003ee565b8760005260208060002060005b85811015620003e55781548a820152908401908201620003ca565b50505082870194505b50929695505050505050565b6112bf806200040a6000396000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c80636e553f65116100b8578063a9059cbb1161007c578063a9059cbb146102b3578063bdc8144b146102c6578063d505accf146102d9578063dd62ed3e146102ec578063e63697c814610317578063fc0c546a1461032a57600080fd5b80636e553f651461025057806370a08231146102635780637ecebe001461028357806395d89b41146102a357806399530b06146102ab57600080fd5b8063258294101161010a57806325829410146101b65780632a410068146101d757806330adf81f146101e1578063313ce567146102085780633644e515146102275780635aa6e6751461023057600080fd5b806301e1d1141461014757806306fdde0314610162578063095ea7b31461017757806318160ddd1461019a57806323b872dd146101a3575b600080fd5b61014f61033d565b6040519081526020015b60405180910390f35b61016a6103af565b6040516101599190610ea1565b61018a610185366004610f0b565b61043d565b6040519015158152602001610159565b61014f60075481565b61018a6101b1366004610f35565b6104aa565b604080518082019091526005815264181719971960d91b602082015261016a565b6101df610677565b005b61014f7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b6002546102159060ff1681565b60405160ff9091168152602001610159565b61014f60065481565b610238610765565b6040516001600160a01b039091168152602001610159565b61014f61025e366004610f71565b6107a0565b61014f610271366004610f9d565b60036020526000908152604090205481565b61014f610291366004610f9d565b60056020526000908152604090205481565b61016a610871565b61014f61087e565b61018a6102c1366004610f0b565b610938565b6101df6102d4366004610fb8565b610945565b6101df6102e7366004610fd1565b61097d565b61014f6102fa366004611044565b600460209081526000928352604080842090915290825290205481565b61014f61032536600461106e565b610c95565b600854610238906001600160a01b031681565b6008546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610386573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103aa9190611093565b905090565b600080546103bc906110ac565b80601f01602080910402602001604051908101604052809291908181526020018280546103e8906110ac565b80156104355780601f1061040a57610100808354040283529160200191610435565b820191906000526020600020905b81548152906001019060200180831161041857829003601f168201915b505050505081565b3360008181526004602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906104989086815260200190565b60405180910390a35060015b92915050565b6001600160a01b038316600090815260036020526040812054828110156105185760405162461bcd60e51b815260206004820152601b60248201527f45524332303a20696e73756666696369656e742d62616c616e6365000000000060448201526064015b60405180910390fd5b6001600160a01b03851633146105d6576001600160a01b038516600090815260046020908152604080832033845290915290205460001981146105d457838110156105a55760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e742d616c6c6f77616e6365000000604482015260640161050f565b6105af84826110fc565b6001600160a01b03871660009081526004602090815260408083203384529091529020555b505b6105e083826110fc565b6001600160a01b03808716600090815260036020526040808220939093559086168152205461061090849061110f565b6001600160a01b0380861660008181526003602052604090819020939093559151908716907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906106649087815260200190565b60405180910390a3506001949350505050565b6008546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156106c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e49190611093565b6008549091506001600160a01b03166340c10f1930610704600a85611122565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b15801561074a57600080fd5b505af115801561075e573d6000803e3d6000fd5b5050505050565b60405162461bcd60e51b815260206004820152600d60248201526c155b9a5b5c1b195b595b9d1959609a1b604482015260009060640161050f565b6000806007546000036107b45750826107e4565b6107bc61087e565b6002546107cd9060ff16600a611228565b6107d79086611237565b6107e19190611122565b90505b6008546040516323b872dd60e01b8152336004820152306024820152604481018690526001600160a01b03909116906323b872dd906064016020604051808303816000875af115801561083b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061085f919061124e565b5061086a8382610d6f565b9392505050565b600180546103bc906110ac565b6008546040516370a0823160e01b815230600482015260009182916001600160a01b03909116906370a0823190602401602060405180830381865afa1580156108cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ef9190611093565b9050806000036109105760025461090a9060ff16600a611228565b91505090565b6007546002546109249060ff16600a611228565b61092e9083611237565b61090a9190611122565b600061086a3384846104aa565b60405162461bcd60e51b815260206004820152600d60248201526c155b9a5b5c1b195b595b9d1959609a1b604482015260640161050f565b6006546001600160a01b038881166000818152600560209081526040918290205482517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981840152808401859052948c166060860152608085018b905260a085015260c08085018a90528251808603909101815260e08501835280519082012061190160f01b610100860152610102850195909552610122808501959095528151808503909501855261014290930190528251929091019190912090610a855760405162461bcd60e51b815260206004820152601860248201527f45524332303a20696e76616c69642d616464726573732d300000000000000000604482015260640161050f565b60408051600081526020810180835283905260ff861691810191909152606081018490526080810183905260019060a0016020604051602081039080840390855afa158015610ad8573d6000803e3d6000fd5b505050602060405103516001600160a01b0316886001600160a01b031614610b3a5760405162461bcd60e51b8152602060048201526015602482015274115490cc8c0e881a5b9d985b1a590b5c195c9b5a5d605a1b604482015260640161050f565b841580610b475750844211155b610b8b5760405162461bcd60e51b8152602060048201526015602482015274115490cc8c0e881c195c9b5a5d0b595e1c1a5c9959605a1b604482015260640161050f565b7f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0821115610c065760405162461bcd60e51b815260206004820152602260248201527f45524332303a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b606482015260840161050f565b6001600160a01b0388166000908152600560205260408120805491610c2a83611270565b90915550506001600160a01b038881166000818152600460209081526040808320948c16808452948252918290208a905590518981527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a35050505050505050565b60006000198403610cb3573360009081526003602052604090205493505b600254600090610cc79060ff16600a611228565b610ccf61087e565b610cd99087611237565b610ce39190611122565b9050610cef3386610e0c565b60085460405163a9059cbb60e01b81526001600160a01b038681166004830152602482018490529091169063a9059cbb906044016020604051808303816000875af1158015610d42573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d66919061124e565b50949350505050565b6001600160a01b038216600090815260036020526040902054610d9390829061110f565b6001600160a01b03831660009081526003602052604081209190915560078054839290610dc190849061110f565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020015b60405180910390a35050565b6001600160a01b038216600090815260036020526040902054610e309082906110fc565b6001600160a01b03831660009081526003602052604081209190915560078054839290610e5e9084906110fc565b90915550506040518181526000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610e00565b600060208083528351808285015260005b81811015610ece57858101830151858201604001528201610eb2565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610f0657600080fd5b919050565b60008060408385031215610f1e57600080fd5b610f2783610eef565b946020939093013593505050565b600080600060608486031215610f4a57600080fd5b610f5384610eef565b9250610f6160208501610eef565b9150604084013590509250925092565b60008060408385031215610f8457600080fd5b82359150610f9460208401610eef565b90509250929050565b600060208284031215610faf57600080fd5b61086a82610eef565b600060208284031215610fca57600080fd5b5035919050565b600080600080600080600060e0888a031215610fec57600080fd5b610ff588610eef565b965061100360208901610eef565b95506040880135945060608801359350608088013560ff8116811461102757600080fd5b9699959850939692959460a0840135945060c09093013592915050565b6000806040838503121561105757600080fd5b61106083610eef565b9150610f9460208401610eef565b60008060006060848603121561108357600080fd5b83359250610f6160208501610eef565b6000602082840312156110a557600080fd5b5051919050565b600181811c908216806110c057607f821691505b6020821081036110e057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b818103818111156104a4576104a46110e6565b808201808211156104a4576104a46110e6565b60008261113f57634e487b7160e01b600052601260045260246000fd5b500490565b600181815b8085111561117f578160001904821115611165576111656110e6565b8085161561117257918102915b93841c9390800290611149565b509250929050565b600082611196575060016104a4565b816111a3575060006104a4565b81600181146111b957600281146111c3576111df565b60019150506104a4565b60ff8411156111d4576111d46110e6565b50506001821b6104a4565b5060208310610133831016604e8410600b8410161715611202575081810a6104a4565b61120c8383611144565b8060001904821115611220576112206110e6565b029392505050565b600061086a60ff841683611187565b80820281158282048414176104a4576104a46110e6565b60006020828403121561126057600080fd5b8151801515811461086a57600080fd5b600060018201611282576112826110e6565b506001019056fea26469706673582212204f710bf82324ca97eff72540b69c3b014135100dbf4fa798ad087524eff5066464736f6c63430008110033";

type TestYVaultConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestYVaultConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestYVault__factory extends ContractFactory {
  constructor(...args: TestYVaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _token: string,
    _decimals: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestYVault> {
    return super.deploy(
      _token,
      _decimals,
      overrides || {}
    ) as Promise<TestYVault>;
  }
  getDeployTransaction(
    _token: string,
    _decimals: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_token, _decimals, overrides || {});
  }
  attach(address: string): TestYVault {
    return super.attach(address) as TestYVault;
  }
  connect(signer: Signer): TestYVault__factory {
    return super.connect(signer) as TestYVault__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestYVaultInterface {
    return new utils.Interface(_abi) as TestYVaultInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestYVault {
    return new Contract(address, _abi, signerOrProvider) as TestYVault;
  }
}
