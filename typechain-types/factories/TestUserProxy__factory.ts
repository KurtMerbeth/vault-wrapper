/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BytesLike,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TestUserProxy, TestUserProxyInterface } from "../TestUserProxy";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_weth",
        type: "address",
      },
      {
        internalType: "address",
        name: "_trancheFactory",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_trancheBytecodeHash",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "authorize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "authorized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "deauthorize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "deprecate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "position",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "expiration",
        type: "uint256",
      },
    ],
    name: "deriveTranche",
    outputs: [
      {
        internalType: "contract ITranche",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "isAuthorized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isFrozen",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "contract IERC20",
        name: "_underlying",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_expiration",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_position",
        type: "address",
      },
      {
        components: [
          {
            internalType: "contract IERC20Permit",
            name: "tokenContract",
            type: "address",
          },
          {
            internalType: "address",
            name: "who",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiration",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
        ],
        internalType: "struct UserProxy.PermitData[]",
        name: "_permitCallData",
        type: "tuple[]",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_newState",
        type: "bool",
      },
    ],
    name: "setIsFrozen",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "weth",
    outputs: [
      {
        internalType: "contract IWETH",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_expiration",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_position",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amountPT",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amountYT",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "contract IERC20Permit",
            name: "tokenContract",
            type: "address",
          },
          {
            internalType: "address",
            name: "who",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiration",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
        ],
        internalType: "struct UserProxy.PermitData[]",
        name: "_permitCallData",
        type: "tuple[]",
      },
    ],
    name: "withdrawWeth",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60e06040526002805460ff1916905534801561001a57600080fd5b506040516114953803806114958339810160408190526100399161009d565b600080546001600160a01b0319163390811782558152600160208190526040909120805460ff191690911790556001600160a01b03928316608052911660a05260c0526100d9565b80516001600160a01b038116811461009857600080fd5b919050565b6000806000606084860312156100b257600080fd5b6100bb84610081565b92506100c960208501610081565b9150604084015190509250925092565b60805160a05160c05161136b61012a6000396000610e6101526000610e2f01526000818160d6015281816101d5015281816105390152818161094501528181610bb30152610c48015261136b6000f3fe6080604052600436106100c65760003560e01c806364eda74b1161007f578063b6a5d7de11610059578063b6a5d7de14610257578063b841d2d214610277578063b91816111461029f578063fe9fbb80146102cf57600080fd5b806364eda74b146101f75780636f1ea24c146102175780638da5cb5b1461023757600080fd5b80630a08ca67146101075780630fcc0c281461014457806313af40351461015957806327c97fa51461017957806333eeb147146101995780633fc8cef3146101c357600080fd5b3661010257336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461010057600080fd5b005b600080fd5b34801561011357600080fd5b50610127610122366004610ff8565b610308565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561015057600080fd5b5061010061031d565b34801561016557600080fd5b50610100610174366004611024565b610353565b34801561018557600080fd5b50610100610194366004611024565b61039f565b3480156101a557600080fd5b506002546101b39060ff1681565b604051901515815260200161013b565b3480156101cf57600080fd5b506101277f000000000000000000000000000000000000000000000000000000000000000081565b34801561020357600080fd5b50610100610212366004611056565b6103ea565b34801561022357600080fd5b506101006102323660046110b8565b610454565b34801561024357600080fd5b50600054610127906001600160a01b031681565b34801561026357600080fd5b50610100610272366004611024565b610a0a565b61028a61028536600461112b565b610a62565b6040805192835260208301919091520161013b565b3480156102ab57600080fd5b506101b36102ba366004611024565b60016020526000908152604090205460ff1681565b3480156102db57600080fd5b506101b36102ea366004611024565b6001600160a01b031660009081526001602052604090205460ff1690565b60006103148383610ddb565b90505b92915050565b6000546001600160a01b031633146103505760405162461bcd60e51b815260040161034790611189565b60405180910390fd5b33ff5b6000546001600160a01b0316331461037d5760405162461bcd60e51b815260040161034790611189565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146103c95760405162461bcd60e51b815260040161034790611189565b6001600160a01b03166000908152600160205260409020805460ff19169055565b3360009081526001602052604090205460ff166104415760405162461bcd60e51b815260206004820152601560248201527414d95b99195c881b9bdd08105d5d1a1bdc9a5e9959605a1b6044820152606401610347565b6002805460ff1916911515919091179055565b60025460ff16156104995760405162461bcd60e51b815260206004820152600f60248201526e21b7b73a3930b1ba10333937bd32b760891b6044820152606401610347565b8181808060200260200160405190810160405280939291908181526020016000905b828210156104e7576104d860e083028601368190038101906111c4565b815260200190600101906104bb565b505050505080516000146105375760005b81518110156105355761052382828151811061051657610516611266565b6020026020010151610ea2565b8061052d81611292565b9150506104f8565b505b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316866001600160a01b031663fc0c546a6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561059f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c391906112ab565b6001600160a01b03161461060a5760405162461bcd60e51b815260206004820152600e60248201526d2737b7103bb2ba34103a37b5b2b760911b6044820152606401610347565b8415158061061757508315155b6106565760405162461bcd60e51b815260206004820152601060248201526f496e76616c696420776974686472617760801b6044820152606401610347565b60006106628789610ddb565b90506000808715610759576040516323b872dd60e01b8152336004820152306024820152604481018990526001600160a01b038416906323b872dd906064016020604051808303816000875af11580156106c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e491906112c8565b5060405163884e17f360e01b8152600481018990523060248201526001600160a01b0384169063884e17f3906044016020604051808303816000875af1158015610732573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075691906112e5565b91505b86156108b3576000836001600160a01b031663764b666c6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561079f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c391906112ab565b6040516323b872dd60e01b8152336004820152306024820152604481018a90529091506001600160a01b038216906323b872dd906064016020604051808303816000875af1158015610819573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061083d91906112c8565b50604051630908556160e11b8152600481018990523060248201526001600160a01b03851690631210aac2906044016020604051808303816000875af115801561088b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108af91906112e5565b9150505b87156108f257816000036108f25760405162461bcd60e51b8152602060048201526006602482015265149d59d9d95960d21b6044820152606401610347565b861561093b578060000361093b5760405162461bcd60e51b815260206004820152601060248201526f139bc81e5a595b19081858d8dc9d595960821b6044820152606401610347565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016632e1a7d4d61097483856112fe565b6040518263ffffffff1660e01b815260040161099291815260200190565b600060405180830381600087803b1580156109ac57600080fd5b505af11580156109c0573d6000803e3d6000fd5b503392506108fc91506109d5905083856112fe565b6040518115909202916000818181858888f193505050501580156109fd573d6000803e3d6000fd5b5050505050505050505050565b6000546001600160a01b03163314610a345760405162461bcd60e51b815260040161034790611189565b610a5f816001600160a01b03166000908152600160208190526040909120805460ff19169091179055565b50565b600254600090819060ff1615610aac5760405162461bcd60e51b815260206004820152600f60248201526e21b7b73a3930b1ba10333937bd32b760891b6044820152606401610347565b8383808060200260200160405190810160405280939291908181526020016000905b82821015610afa57610aeb60e083028601368190038101906111c4565b81526020019060010190610ace565b50505050508051600014610b3d5760005b8151811015610b3b57610b2982828151811061051657610516611266565b80610b3381611292565b915050610b0b565b505b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed196001600160a01b03891601610cbf57883414610bb15760405162461bcd60e51b815260206004820152601960248201527f496e636f727265637420616d6f756e742070726f7669646564000000000000006044820152606401610347565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0346040518263ffffffff1660e01b81526004016000604051808303818588803b158015610c0c57600080fd5b505af1158015610c20573d6000803e3d6000fd5b505060405163a9059cbb60e01b81526001600160a01b038a81166004830152602482018e90527f000000000000000000000000000000000000000000000000000000000000000016935063a9059cbb925060440190506020604051808303816000875af1158015610c95573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cb991906112c8565b50610d76565b3415610cfb5760405162461bcd60e51b815260206004820152600b60248201526a4e6f6e2070617961626c6560a81b6044820152606401610347565b6040516323b872dd60e01b81523360048201526001600160a01b038781166024830152604482018b90528916906323b872dd906064016020604051808303816000875af1158015610d50573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d7491906112c8565b505b600080610d838989610f4b565b915091508a811015610dcb5760405162461bcd60e51b8152602060048201526011602482015270139bdd08195b9bdd59da081b5a5b9d1959607a1b6044820152606401610347565b909a909950975050505050505050565b604080516bffffffffffffffffffffffff19606094851b8116602080840191909152603480840195909552835180840390950185526054830184528451948101949094206001600160f81b031960748401527f000000000000000000000000000000000000000000000000000000000000000090951b16607582015260898101939093527f000000000000000000000000000000000000000000000000000000000000000060a9808501919091528151808503909101815260c99093019052815191012090565b80516020820151604080840151606085015160c0860151608087015160a0880151945163d505accf60e01b81523360048201526001600160a01b0396871660248201526044810194909452606484019290925260ff16608483015260a482015260c481019190915291169063d505accf9060e401600060405180830381600087803b158015610f3057600080fd5b505af1158015610f44573d6000803e3d6000fd5b5050505050565b6000806000610f5a8486610ddb565b6040516310be8b9160e31b81523360048201529091506001600160a01b038216906385f45c889060240160408051808303816000875af1158015610fa2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fc69190611311565b92509250505b9250929050565b6001600160a01b0381168114610a5f57600080fd5b8035610ff381610fd3565b919050565b6000806040838503121561100b57600080fd5b823561101681610fd3565b946020939093013593505050565b60006020828403121561103657600080fd5b813561104181610fd3565b9392505050565b8015158114610a5f57600080fd5b60006020828403121561106857600080fd5b813561104181611048565b60008083601f84011261108557600080fd5b50813567ffffffffffffffff81111561109d57600080fd5b60208301915083602060e083028501011115610fcc57600080fd5b60008060008060008060a087890312156110d157600080fd5b8635955060208701356110e381610fd3565b94506040870135935060608701359250608087013567ffffffffffffffff81111561110d57600080fd5b61111989828a01611073565b979a9699509497509295939492505050565b60008060008060008060a0878903121561114457600080fd5b86359550602087013561115681610fd3565b945060408701359350606087013561116d81610fd3565b9250608087013567ffffffffffffffff81111561110d57600080fd5b60208082526010908201526f29b2b73232b9103737ba1037bbb732b960811b604082015260600190565b803560ff81168114610ff357600080fd5b600060e082840312156111d657600080fd5b60405160e0810181811067ffffffffffffffff8211171561120757634e487b7160e01b600052604160045260246000fd5b60405261121383610fe8565b815261122160208401610fe8565b602082015260408301356040820152606083013560608201526080830135608082015260a083013560a082015261125a60c084016111b3565b60c08201529392505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016112a4576112a461127c565b5060010190565b6000602082840312156112bd57600080fd5b815161104181610fd3565b6000602082840312156112da57600080fd5b815161104181611048565b6000602082840312156112f757600080fd5b5051919050565b808201808211156103175761031761127c565b6000806040838503121561132457600080fd5b50508051602090910151909290915056fea26469706673582212201ec19c099188aa554ebaaff243fff4dcb9c25724fc5d6ceccc21a3cf3b370d7c64736f6c63430008110033";

type TestUserProxyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestUserProxyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestUserProxy__factory extends ContractFactory {
  constructor(...args: TestUserProxyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _weth: string,
    _trancheFactory: string,
    _trancheBytecodeHash: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestUserProxy> {
    return super.deploy(
      _weth,
      _trancheFactory,
      _trancheBytecodeHash,
      overrides || {}
    ) as Promise<TestUserProxy>;
  }
  getDeployTransaction(
    _weth: string,
    _trancheFactory: string,
    _trancheBytecodeHash: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _weth,
      _trancheFactory,
      _trancheBytecodeHash,
      overrides || {}
    );
  }
  attach(address: string): TestUserProxy {
    return super.attach(address) as TestUserProxy;
  }
  connect(signer: Signer): TestUserProxy__factory {
    return super.connect(signer) as TestUserProxy__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestUserProxyInterface {
    return new utils.Interface(_abi) as TestUserProxyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestUserProxy {
    return new Contract(address, _abi, signerOrProvider) as TestUserProxy;
  }
}
