/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  YVaultAssetProxy,
  YVaultAssetProxyInterface,
} from "../YVaultAssetProxy";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "vault_",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "address",
        name: "_governance",
        type: "address",
      },
      {
        internalType: "address",
        name: "_pauser",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PERMIT_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "authorize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "authorized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_who",
        type: "address",
      },
    ],
    name: "balanceOfUnderlying",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "conversionRate",
    outputs: [
      {
        internalType: "uint88",
        name: "",
        type: "uint88",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "deauthorize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_destination",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_shares",
        type: "uint256",
      },
    ],
    name: "getSharesToUnderlying",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "isAuthorized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "pauseStatus",
        type: "bool",
      },
    ],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_destination",
        type: "address",
      },
    ],
    name: "prefundedDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IYearnVault",
        name: "newVault",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "minOutputShares",
        type: "uint256",
      },
    ],
    name: "transition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vault",
    outputs: [
      {
        internalType: "contract IYearnVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "vaultDecimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_destination",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_shares",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_minUnderlying",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_destination",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_minUnderlying",
        type: "uint256",
      },
    ],
    name: "withdrawUnderlying",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c06040523480156200001157600080fd5b50604051620025253803806200252583398101604081905262000034916200053c565b848484818160006200004783826200068b565b5060016200005682826200068b565b506002805460ff1916601217905560036020526000197f3617319a054d772f909f7c479a2cebe5066e836a939412e32403c99029b92eff81905530600090815260409020557f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051620000cd919062000757565b60408051918290038220828201825260018352603160f81b6020938401528151928301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160408051601f1981840301815282825280516020918201206006556001600160a01b038816608081905263313ce56760e01b84529151620001d1955091935063313ce56792600480820193918290030181865afa15801562000195573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001bb9190620007d5565b6002805460ff191660ff92909216919091179055565b5050600780546001600160a01b03191633179055506200020f816001600160a01b03166000908152600860205260409020805460ff19166001179055565b6200021a82620003ed565b600980546001600160a01b0319166001600160a01b0388811691821790925560405163095ea7b360e01b8152600481019190915260001960248201529086169063095ea7b3906044016020604051808303816000875af115801562000283573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002a9919062000801565b506000866001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015620002eb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003119190620007d5565b90508060ff1660a08160ff16815250508060ff16866001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000364573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200038a9190620007d5565b60ff1614620003e05760405162461bcd60e51b815260206004820152601560248201527f496e636f6e73697374656e7420646563696d616c73000000000000000000000060448201526064015b60405180910390fd5b5050505050505062000825565b6007546001600160a01b031633146200043c5760405162461bcd60e51b815260206004820152601060248201526f29b2b73232b9103737ba1037bbb732b960811b6044820152606401620003d7565b600780546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b03811681146200047457600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200049f57600080fd5b81516001600160401b0380821115620004bc57620004bc62000477565b604051601f8301601f19908116603f01168101908282118183101715620004e757620004e762000477565b816040528381526020925086838588010111156200050457600080fd5b600091505b8382101562000528578582018301518183018401529082019062000509565b600093810190920192909252949350505050565b60008060008060008060c087890312156200055657600080fd5b865162000563816200045e565b602088015190965062000576816200045e565b60408801519095506001600160401b03808211156200059457600080fd5b620005a28a838b016200048d565b95506060890151915080821115620005b957600080fd5b50620005c889828a016200048d565b9350506080870151620005db816200045e565b60a0880151909250620005ee816200045e565b809150509295509295509295565b600181811c908216806200061157607f821691505b6020821081036200063257634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200068657600081815260208120601f850160051c81016020861015620006615750805b601f850160051c820191505b8181101562000682578281556001016200066d565b5050505b505050565b81516001600160401b03811115620006a757620006a762000477565b620006bf81620006b88454620005fc565b8462000638565b602080601f831160018114620006f75760008415620006de5750858301515b600019600386901b1c1916600185901b17855562000682565b600085815260208120601f198616915b82811015620007285788860151825594840194600190910190840162000707565b5085821015620007475787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60008083546200076781620005fc565b600182811680156200078257600181146200079857620007c9565b60ff1984168752821515830287019450620007c9565b8760005260208060002060005b85811015620007c05781548a820152908401908201620007a5565b50505082870194505b50929695505050505050565b600060208284031215620007e857600080fd5b815160ff81168114620007fa57600080fd5b9392505050565b6000602082840312156200081457600080fd5b81518015158114620007fa57600080fd5b60805160a051611ca96200087c60003960008181610423015261137901526000818161051d0152818161070b015281816107a501528181610abd01528181610e1701528181610e9d015261141b0152611ca96000f3fe608060405234801561001057600080fd5b50600436106101f05760003560e01c80637ffdf53e1161010f578063b9181611116100a2578063e613deb211610071578063e613deb2146104f2578063fbfa77cf14610505578063fc0c546a14610518578063fe9fbb801461053f57600080fd5b8063b91816111461047e578063d1f4f826146104a1578063d505accf146104b4578063dd62ed3e146104c757600080fd5b80639d6179c3116100de5780639d6179c31461041e578063a9059cbb14610445578063b5c5f67214610458578063b6a5d7de1461046b57600080fd5b80637ffdf53e1461038b57806385f45c88146103bd5780638da5cb5b146103eb57806395d89b411461041657600080fd5b8063313ce567116101875780635c975abb116101565780635c975abb1461030f57806367caf8711461032357806370a082311461034b5780637ecebe001461036b57600080fd5b8063313ce567146102c15780633644e515146102e05780633af9e669146102e957806347e7ef24146102fc57600080fd5b806313af4035116101c357806313af40351461025357806323b872dd1461026657806327c97fa51461027957806330adf81f1461028c57600080fd5b806302329a29146101f557806306fdde031461020a578063095ea7b31461022857806312424e3f1461024b575b600080fd5b610208610203366004611850565b61056b565b005b6102126105e7565b60405161021f919061186d565b60405180910390f35b61023b6102363660046118d0565b610675565b604051901515815260200161021f565b6102086106e2565b6102086102613660046118fc565b610817565b61023b610274366004611919565b610863565b6102086102873660046118fc565b610a2b565b6102b37f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b60405190815260200161021f565b6002546102ce9060ff1681565b60405160ff909116815260200161021f565b6102b360065481565b6102b36102f73660046118fc565b610a76565b6102b361030a3660046118d0565b610a98565b60095461023b90600160f81b900460ff1681565b61033661033136600461195a565b610b51565b6040805192835260208301919091520161021f565b6102b36103593660046118fc565b60036020526000908152604090205481565b6102b36103793660046118fc565b60056020526000908152604090205481565b6009546103a590600160a01b90046001600160581b031681565b6040516001600160581b03909116815260200161021f565b6103d06103cb3660046118fc565b610bae565b6040805193845260208401929092529082015260600161021f565b6007546103fe906001600160a01b031681565b6040516001600160a01b03909116815260200161021f565b610212610bf3565b6102ce7f000000000000000000000000000000000000000000000000000000000000000081565b61023b6104533660046118d0565b610c00565b6102b361046636600461195a565b610c0d565b6102086104793660046118fc565b610c24565b61023b61048c3660046118fc565b60086020526000908152604090205460ff1681565b6102086104af3660046118d0565b610c76565b6102086104c236600461198f565b611008565b6102b36104d5366004611a06565b600460209081526000928352604080842090915290825290205481565b6102b3610500366004611a3f565b611320565b6009546103fe906001600160a01b031681565b6103fe7f000000000000000000000000000000000000000000000000000000000000000081565b61023b61054d3660046118fc565b6001600160a01b031660009081526008602052604090205460ff1690565b3360009081526008602052604090205460ff166105c75760405162461bcd60e51b815260206004820152601560248201527414d95b99195c881b9bdd08105d5d1a1bdc9a5e9959605a1b60448201526064015b60405180910390fd5b60098054911515600160f81b026001600160f81b03909216919091179055565b600080546105f490611a58565b80601f016020809104026020016040519081016040528092919081815260200182805461062090611a58565b801561066d5780601f106106425761010080835404028352916020019161066d565b820191906000526020600020905b81548152906001019060200180831161065057829003601f168201915b505050505081565b3360008181526004602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906106d09086815260200190565b60405180910390a35060015b92915050565b60095460405163095ea7b360e01b81526001600160a01b039182166004820152600060248201527f00000000000000000000000000000000000000000000000000000000000000009091169063095ea7b3906044016020604051808303816000875af1158015610756573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061077a9190611a92565b5060095460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201527f00000000000000000000000000000000000000000000000000000000000000009091169063095ea7b3906044016020604051808303816000875af11580156107f0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108149190611a92565b50565b6007546001600160a01b031633146108415760405162461bcd60e51b81526004016105be90611aaf565b600780546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b038316600090815260036020526040812054828110156108cc5760405162461bcd60e51b815260206004820152601b60248201527f45524332303a20696e73756666696369656e742d62616c616e6365000000000060448201526064016105be565b6001600160a01b038516331461098a576001600160a01b0385166000908152600460209081526040808320338452909152902054600019811461098857838110156109595760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e742d616c6c6f77616e636500000060448201526064016105be565b6109638482611aef565b6001600160a01b03871660009081526004602090815260408083203384529091529020555b505b6109948382611aef565b6001600160a01b0380871660009081526003602052604080822093909355908616815220546109c4908490611b02565b6001600160a01b0380861660008181526003602052604090819020939093559151908716907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610a189087815260200190565b60405180910390a3506001949350505050565b6007546001600160a01b03163314610a555760405162461bcd60e51b81526004016105be90611aaf565b6001600160a01b03166000908152600860205260409020805460ff19169055565b6001600160a01b0381166000908152600360205260408120546106dc90611327565b6040516323b872dd60e01b8152336004820152306024820152604481018290526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd906064016020604051808303816000875af1158015610b0e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b329190611a92565b506000610b3d6113bb565b509050610b4a8482611560565b9392505050565b60025460009081908190610b699060ff16600a611bf9565b90506000610b7682611327565b9050600081610b858489611c08565b610b8f9190611c1f565b90506000610b9f898389866115e1565b99919850909650505050505050565b6000806000806000610bbe6113bb565b6001600160a01b0388166000908152600360205260409020549193509150610be68784611560565b9196909550909350915050565b600180546105f490611a58565b6000610b4a338484610863565b6000610c1c84848460006115e1565b949350505050565b6007546001600160a01b03163314610c4e5760405162461bcd60e51b81526004016105be90611aaf565b610814816001600160a01b03166000908152600860205260409020805460ff19166001179055565b6007546001600160a01b03163314610ca05760405162461bcd60e51b81526004016105be90611aaf565b6000610caa61164d565b90506000836001600160a01b03166399530b066040518163ffffffff1660e01b8152600401602060405180830381865afa158015610cec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d109190611c41565b600954909150600090600160a01b90046001600160581b031615610d4657600954600160a01b90046001600160581b0316610d50565b670de0b6b3a76400005b6001600160581b0316905082610d668383611c08565b610d709190611c1f565b600954604051631cc6d2f960e31b8152600019600482015230602482015261271060448201529192506001600160a01b03169063e63697c8906064016020604051808303816000875af1158015610dcb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610def9190611c41565b5060405163095ea7b360e01b81526001600160a01b03868116600483015260001960248301527f0000000000000000000000000000000000000000000000000000000000000000169063095ea7b3906044016020604051808303816000875af1158015610e60573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e849190611a92565b506040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610eec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f109190611c41565b604051636e553f6560e01b8152600481018290523060248201529091506000906001600160a01b03881690636e553f65906044016020604051808303816000875af1158015610f63573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f879190611c41565b905085811015610fcd5760405162461bcd60e51b8152602060048201526011602482015270139bdd08195b9bdd59da081bdd5d1c1d5d607a1b60448201526064016105be565b5050600980546001600160581b03909216600160a01b026001600160f81b03199092166001600160a01b039096169590951717909355505050565b6006546001600160a01b038881166000818152600560209081526040918290205482517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981840152808401859052948c166060860152608085018b905260a085015260c08085018a90528251808603909101815260e08501835280519082012061190160f01b6101008601526101028501959095526101228085019590955281518085039095018552610142909301905282519290910191909120906111105760405162461bcd60e51b815260206004820152601860248201527f45524332303a20696e76616c69642d616464726573732d30000000000000000060448201526064016105be565b60408051600081526020810180835283905260ff861691810191909152606081018490526080810183905260019060a0016020604051602081039080840390855afa158015611163573d6000803e3d6000fd5b505050602060405103516001600160a01b0316886001600160a01b0316146111c55760405162461bcd60e51b8152602060048201526015602482015274115490cc8c0e881a5b9d985b1a590b5c195c9b5a5d605a1b60448201526064016105be565b8415806111d25750844211155b6112165760405162461bcd60e51b8152602060048201526015602482015274115490cc8c0e881c195c9b5a5d0b595e1c1a5c9959605a1b60448201526064016105be565b7f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08211156112915760405162461bcd60e51b815260206004820152602260248201527f45524332303a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016105be565b6001600160a01b03881660009081526005602052604081208054916112b583611c5a565b90915550506001600160a01b038881166000818152600460209081526040808320948c16808452948252918290208a905590518981527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a35050505050505050565b60006106dc825b600954600090600160a01b90046001600160581b03161561137457600954600160a01b90046001600160581b031661136783670de0b6b3a7640000611c08565b6113719190611c1f565b91505b61139f7f0000000000000000000000000000000000000000000000000000000000000000600a611bf9565b6113a761164d565b6113b19084611c08565b6106dc9190611c1f565b6009546000908190600160f81b900460ff16156114035760405162461bcd60e51b815260206004820152600660248201526514185d5cd95960d21b60448201526064016105be565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa15801561146a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061148e9190611c41565b600954604051636e553f6560e01b8152600481018390523060248201529192506000916001600160a01b0390911690636e553f65906044016020604051808303816000875af11580156114e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115099190611c41565b600954909150600160a01b90046001600160581b03161561155857600954670de0b6b3a76400009061154b90600160a01b90046001600160581b031683611c08565b6115559190611c1f565b90505b925090509091565b6001600160a01b038216600090815260036020526040902054611584908290611b02565b6001600160a01b0383166000818152600360205260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906115d59085815260200190565b60405180910390a35050565b60006115ed33856116c0565b60006115fa858785611732565b9050838110156116445760405162461bcd60e51b81526020600482015260156024820152744e6f7420656e6f75676820756e6465726c79696e6760581b60448201526064016105be565b95945050505050565b60095460408051634ca9858360e11b815290516000926001600160a01b0316916399530b069160048083019260209291908290030181865afa158015611697573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116bb9190611c41565b905090565b6001600160a01b0382166000908152600360205260409020546116e4908290611aef565b6001600160a01b0383166000818152600360205260408082209390935591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906115d59085815260200190565b600954600090600160f81b900460ff16156117785760405162461bcd60e51b815260206004820152600660248201526514185d5cd95960d21b60448201526064016105be565b600954600160a01b90046001600160581b0316156117c257600954600160a01b90046001600160581b03166117b585670de0b6b3a7640000611c08565b6117bf9190611c1f565b93505b600954604051631cc6d2f960e31b8152600481018690526001600160a01b0385811660248301526127106044830152600092169063e63697c8906064016020604051808303816000875af115801561181e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116449190611c41565b801515811461081457600080fd5b60006020828403121561186257600080fd5b8135610b4a81611842565b600060208083528351808285015260005b8181101561189a5785810183015185820160400152820161187e565b506000604082860101526040601f19601f8301168501019250505092915050565b6001600160a01b038116811461081457600080fd5b600080604083850312156118e357600080fd5b82356118ee816118bb565b946020939093013593505050565b60006020828403121561190e57600080fd5b8135610b4a816118bb565b60008060006060848603121561192e57600080fd5b8335611939816118bb565b92506020840135611949816118bb565b929592945050506040919091013590565b60008060006060848603121561196f57600080fd5b833561197a816118bb565b95602085013595506040909401359392505050565b600080600080600080600060e0888a0312156119aa57600080fd5b87356119b5816118bb565b965060208801356119c5816118bb565b95506040880135945060608801359350608088013560ff811681146119e957600080fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215611a1957600080fd5b8235611a24816118bb565b91506020830135611a34816118bb565b809150509250929050565b600060208284031215611a5157600080fd5b5035919050565b600181811c90821680611a6c57607f821691505b602082108103611a8c57634e487b7160e01b600052602260045260246000fd5b50919050565b600060208284031215611aa457600080fd5b8151610b4a81611842565b60208082526010908201526f29b2b73232b9103737ba1037bbb732b960811b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b818103818111156106dc576106dc611ad9565b808201808211156106dc576106dc611ad9565b600181815b80851115611b50578160001904821115611b3657611b36611ad9565b80851615611b4357918102915b93841c9390800290611b1a565b509250929050565b600082611b67575060016106dc565b81611b74575060006106dc565b8160018114611b8a5760028114611b9457611bb0565b60019150506106dc565b60ff841115611ba557611ba5611ad9565b50506001821b6106dc565b5060208310610133831016604e8410600b8410161715611bd3575081810a6106dc565b611bdd8383611b15565b8060001904821115611bf157611bf1611ad9565b029392505050565b6000610b4a60ff841683611b58565b80820281158282048414176106dc576106dc611ad9565b600082611c3c57634e487b7160e01b600052601260045260246000fd5b500490565b600060208284031215611c5357600080fd5b5051919050565b600060018201611c6c57611c6c611ad9565b506001019056fea2646970667358221220c81343f24fab9757ad7e249d32812bfb0eb997e4977c1899635079a26d5ff26064736f6c63430008110033";

type YVaultAssetProxyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: YVaultAssetProxyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class YVaultAssetProxy__factory extends ContractFactory {
  constructor(...args: YVaultAssetProxyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    vault_: string,
    _token: string,
    _name: string,
    _symbol: string,
    _governance: string,
    _pauser: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<YVaultAssetProxy> {
    return super.deploy(
      vault_,
      _token,
      _name,
      _symbol,
      _governance,
      _pauser,
      overrides || {}
    ) as Promise<YVaultAssetProxy>;
  }
  getDeployTransaction(
    vault_: string,
    _token: string,
    _name: string,
    _symbol: string,
    _governance: string,
    _pauser: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      vault_,
      _token,
      _name,
      _symbol,
      _governance,
      _pauser,
      overrides || {}
    );
  }
  attach(address: string): YVaultAssetProxy {
    return super.attach(address) as YVaultAssetProxy;
  }
  connect(signer: Signer): YVaultAssetProxy__factory {
    return super.connect(signer) as YVaultAssetProxy__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): YVaultAssetProxyInterface {
    return new utils.Interface(_abi) as YVaultAssetProxyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): YVaultAssetProxy {
    return new Contract(address, _abi, signerOrProvider) as YVaultAssetProxy;
  }
}
